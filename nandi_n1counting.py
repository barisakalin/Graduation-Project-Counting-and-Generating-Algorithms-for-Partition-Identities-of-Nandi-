# -*- coding: utf-8 -*-
"""nandi_n1counting.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-It33_nvySkXYag8yZBKMC7bewjIbs9v
"""

n = int(input("Integer: "))
#m = int(input("m: "))
#1 = 2-2
#2 = 2
#3 = 3-3
#4 = 3
#5 = 3230
m = 1
sum = 2
increment = 2
l = 1
while sum <= n:
  if l == 1:
    l = 0
    sum += increment
    increment += 4
  else:
    l += 1
    sum += increment
  if sum > n:
    break
  else:
    m += 1

arr = [[[-1,-1,-1,-1,-1,-1] for i in range(m+1)] for j in range(n+1)]

def C(n,m,var):

  mm = 1
  sum = 2
  increment = 2
  l = 1
  while sum <= n:
    if l == 1:
      l = 0
      sum += increment
      increment += 4
    else:
      l += 1
      sum += increment
    if sum > n:
      break
    else:
      mm += 1
  if mm < m:
    return 0


  if m < 0:
    return 0

  elif m == 0:
    if n == 0:
      return 1
    else:
      return 0

  elif m == 1:
    if var == 3 and n == 3:
      return 0
    if var == 4 and n == 2:
      return 0
    if var == 5 and n == 2:
      return 0
    if n >= 2:
      return 1
    else:
      return 0

  else:

    if var == 1:
      if arr[n][m][1] != -1:
        return arr[n][m][1]
      elif arr[n][m][0] != -1:
        return arr[n][m][0]
      else:
        result = C(n-4-(m-2)*4,m-2,1) + C(n-2-(m-1)*2,m-1,2) + C(n-6-(m-2)*4,m-2,3) + C(n-3-(m-1)*2,m-1,4) + C(n-m*2,m,0)
        arr[n][m][1] = result
        arr[n][m][0] = result
        return result
    if var == 2:
      if arr[n][m][2] != -1:
        return arr[n][m][2]
      elif arr[n][m][0] != -1:
        x = C(n-4-(m-2)*4,m-2,1) + C(n-6-(m-2)*4,m-2,3)
        return arr[n][m][0] - x
      else:
        x = C(n-4-(m-2)*4,m-2,1) + C(n-6-(m-2)*4,m-2,3)
        result = C(n-4-(m-2)*4,m-2,1) + C(n-2-(m-1)*2,m-1,2) + C(n-6-(m-2)*4,m-2,3) + C(n-3-(m-1)*2,m-1,4) + C(n-m*2,m,0) - x
        arr[n][m][2] = result
        arr[n][m][0] = result + x
        return result
    elif var == 3:
      if arr[n][m][3] != -1:
        return arr[n][m][3]
      elif arr[n][m][0] != -1:
        y = C(n-4-(m-2)*4,m-2,1) + C(n-6-(m-2)*4,m-2,3) + C(n-3-(m-1)*2,m-1,4)
        #index = 0
        index2 = 0
        index3 = 2
        inc = 7
        inc2 = 6
        while n-inc-(m-index3)*(4+index2)>=0 and m-index3 >= 0:
          y += C(n-inc-(m-index3)*(4+index2),m-index3,5)
          #print("aa:",n-inc-(m-index3)*(4+index2),"n:",n,"m:",m)
          index3 += 1
          index2 += 2
          inc += inc2
          inc2 += 2
        return arr[n][m][0] - y
      else:
        y = C(n-4-(m-2)*4,m-2,1) + C(n-6-(m-2)*4,m-2,3) + C(n-3-(m-1)*2,m-1,4)
        #index = 0
        index2 = 0
        index3 = 2
        inc = 7
        inc2 = 6
        while n-inc-(m-index3)*(4+index2)>=0 and m-index3 >= 0:
          y += C(n-inc-(m-index3)*(4+index2),m-index3,5)
          #print("aa:",n-inc-(m-index3)*(4+index2),"n:",n,"m:",m)
          index3 += 1
          index2 += 2
          inc += inc2
          inc2 += 2
        result = C(n-4-(m-2)*4,m-2,1) + C(n-2-(m-1)*2,m-1,2) + C(n-6-(m-2)*4,m-2,3) + C(n-3-(m-1)*2,m-1,4) + C(n-m*2,m,0) - y
        arr[n][m][3] = result
        arr[n][m][0] = result + y
        return result
    elif var == 4:
      if arr[n][m][4] != -1:
        return arr[n][m][4]
      elif arr[n][m][0] != -1:
        z = C(n-4-(m-2)*4,m-2,1) + C(n-2-(m-1)*2,m-1,2) + C(n-6-(m-2)*4,m-2,3) + C(n-m*2-4-(m-2)*4,m-2,1) + C(n-m*2-6-(m-2)*4,m-2,3)
        return arr[n][m][0] - z
      else:
        z = C(n-4-(m-2)*4,m-2,1) + C(n-2-(m-1)*2,m-1,2) + C(n-6-(m-2)*4,m-2,3) + C(n-m*2-4-(m-2)*4,m-2,1) + C(n-m*2-6-(m-2)*4,m-2,3)
        result = C(n-4-(m-2)*4,m-2,1) + C(n-2-(m-1)*2,m-1,2) + C(n-6-(m-2)*4,m-2,3) + C(n-3-(m-1)*2,m-1,4) + C(n-m*2,m,0) - z
        arr[n][m][4] = result
        arr[n][m][0] = result + z
        return result
    elif var == 5:
      if arr[n][m][5] != -1:
        return arr[n][m][5]
      elif arr[n][m][0] != -1:
        t = C(n-4-(m-2)*4,m-2,1) + C(n-2-(m-1)*2,m-1,2) + C(n-6-(m-2)*4,m-2,3) + C(n-m*2-4-(m-2)*4,m-2,1) + C(n-m*2-6-(m-2)*4,m-2,3)
        return arr[n][m][0] - t
      else:
        t = C(n-4-(m-2)*4,m-2,1) + C(n-2-(m-1)*2,m-1,2) + C(n-6-(m-2)*4,m-2,3) + C(n-m*2-4-(m-2)*4,m-2,1) + C(n-m*2-6-(m-2)*4,m-2,3)
        result = C(n-4-(m-2)*4,m-2,1) + C(n-2-(m-1)*2,m-1,2) + C(n-6-(m-2)*4,m-2,3) + C(n-3-(m-1)*2,m-1,4) + C(n-m*2,m,0) - t
        arr[n][m][5] = result
        arr[n][m][0] = result + t
        return result

    else:
      if arr[n][m][0] != -1:
        return arr[n][m][0]
      else:
        result = C(n-4-(m-2)*4,m-2,1) + C(n-2-(m-1)*2,m-1,2) + C(n-6-(m-2)*4,m-2,3) + C(n-3-(m-1)*2,m-1,4) + C(n-m*2,m,0)
        arr[n][m][0] = result
        return result

total_count = 0
for i in range(1,m+1):
  num = C(n,i,0)
  print("m:",i,"Count:",num)
  total_count += num

print("Total Count:",total_count)